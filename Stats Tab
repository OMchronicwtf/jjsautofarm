-- StatsTabModule.lua
return function(Window, QuestEvent, player, RunService)
    -- =======================
    -- Create Stats Tab
    -- =======================
    local StatsTab = Window:CreateTab("Auto Stats", "bar-chart")

    -- =======================
    -- Label for Available Points + Applied Stats
    -- =======================

    StatsTab:CreateSection("Points Info")

    local pointsLabel = StatsTab:CreateLabel("Available Points: 0 | Melee: 1 | Health: 1 | Weapon: 1 | Power: 1")
    RunService.Heartbeat:Connect(function()
        local data = player:WaitForChild("Data")
        local points = data:WaitForChild("Points").Value
        local melee = (data:GetAttribute("M") or 0) + 1
        local health = (data:GetAttribute("H") or 0) + 1
        local weapon = (data:GetAttribute("S") or 0) + 1
        local power = (data:GetAttribute("P") or 0) + 1

        pointsLabel:Set(string.format(
            "Available Points: %d\nMelee: %d | Health: %d | Weapon: %d | Power: %d",
            points,
            melee, health, weapon, power
        ))
    end)

    -- =======================
    -- Stat Mappings & Options
    -- =======================
    local StatMap = {Melee="M", Health="H", Weapon="S", Power="P"}
    local statOptions = {"Melee", "Health", "Weapon", "Power"}

    -- =======================
    -- Auto Apply Stats Section
    -- =======================
    StatsTab:CreateSection("Auto Apply Stats")
    local selectedAutoStats = {statOptions[1]}
    local autoPoints = 0
    local autoApplyEnabled = false
    local autoApplyConnection
    local autoIndex = 1 -- to track round-robin distribution

    -- Input for auto points
    StatsTab:CreateInput({
        Name = "Points to Auto Apply",
        CurrentValue = "",
        PlaceholderText = "Enter number of points",
        RemoveTextAfterFocusLost = true,
        Flag = "AutoPointsInput",
        Callback = function(value)
            autoPoints = tonumber(value) or 0
        end
    })

    -- Multi-select dropdown
    StatsTab:CreateDropdown({
        Name = "Select Stats for Auto Apply",
        Options = statOptions,
        CurrentOption = {statOptions[1]},
        MultipleOptions = true,
        Flag = "AutoStatDropdown",
        Callback = function(options)
            selectedAutoStats = options
            autoIndex = 1 -- reset index when selection changes
        end
    })

    -- Toggle to enable auto apply
    StatsTab:CreateToggle({
        Name = "Enable Auto Apply",
        CurrentValue = false,
        Flag = "AutoApplyToggle",
        Callback = function(state)
            autoApplyEnabled = state
            if state then
                autoApplyConnection = RunService.Heartbeat:Connect(function()
                    if not autoApplyEnabled then return end

                    local availablePoints = player:WaitForChild("Data"):WaitForChild("Points").Value
                    if availablePoints > 0 and autoPoints > 0 and #selectedAutoStats > 0 then
                        -- Round-robin apply one stat at a time
                        local statName = selectedAutoStats[autoIndex]
                        if StatMap[statName] then
                            local applyAmount = math.min(autoPoints, availablePoints)
                            QuestEvent:FireServer({
                                Type = "StatsAdd",
                                C = StatMap[statName],
                                Amount = applyAmount
                            })
                            availablePoints = availablePoints - applyAmount
                        end

                        -- Move to next stat in list
                        autoIndex = autoIndex + 1
                        if autoIndex > #selectedAutoStats then
                            autoIndex = 1
                        end
                    end
                end)
            else
                if autoApplyConnection then
                    autoApplyConnection:Disconnect()
                    autoApplyConnection = nil
                end
            end
        end
    })

    -- =======================
    -- Manual Apply Stats Section
    -- =======================
    StatsTab:CreateSection("Self Apply Points")
    local selectedManualStat = statOptions[1]
    local manualPoints = 0

    -- Input for manual points
    StatsTab:CreateInput({
        Name = "Amount",
        CurrentValue = "",
        PlaceholderText = "Enter number of points",
        RemoveTextAfterFocusLost = true,
        Flag = "ManualPointsInput",
        Callback = function(value)
            manualPoints = tonumber(value) or 0
        end
    })

    -- Dropdown to select single stat
    StatsTab:CreateDropdown({
        Name = "Select Stat",
        Options = statOptions,
        CurrentOption = {statOptions[1]},
        MultipleOptions = false,
        Flag = "ManualStatDropdown",
        Callback = function(option)
            selectedManualStat = option[1]
        end
    })

    -- Button to apply manual points
    StatsTab:CreateButton({
        Name = "Apply Points",
        Callback = function()
            if manualPoints > 0 and selectedManualStat and StatMap[selectedManualStat] then
                QuestEvent:FireServer({
                    Type = "StatsAdd",
                    C = StatMap[selectedManualStat],
                    Amount = manualPoints
                })
            end
        end
    })

    -- =======================
    -- Reset Section
    -- =======================
    StatsTab:CreateSection("Reset")
    StatsTab:CreateButton({
        Name = "Reset All Points",
        Callback = function()
            QuestEvent:FireServer({
                Type = "Resett"
            })
        end
    })
end
