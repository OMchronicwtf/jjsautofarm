-- ShoppingModule.lua
-- Returns a function to create the Shopping tab
return function(Window, QuestEvent, stockTable, Rayfield)
    -- Create tab and section
    local ShopTab = Window:CreateTab("Shopping ðŸ›’", "shopping-bag")
    local ShopSection = ShopTab:CreateSection("Item Shop")

    -- Define StockTable order explicitly
    local orderedKeys = {
        "MV1","MV2","MV3","MV9","MV8","MV14","MV5","MV6",
        "MV7","MV15","MV10","MV12","MV11","MV13"
    }

    -- Prepare dropdown options
    local itemNames = {}
    local itemMap = {} -- mapping displayName -> key
    for _, key in ipairs(orderedKeys) do
        local item = stockTable[key]
        if item and item.Name and item.Price then
            local displayName = item.Name .. " - " .. item.Price
            table.insert(itemNames, displayName)
            itemMap[displayName] = key
        end
    end

    if #itemNames == 0 then
        ShopSection:CreateLabel("No items available in stock.")
        return
    end

    local selectedItem = itemNames[1]

    -- Create dropdown
    local ItemDropdown = ShopSection:CreateDropdown({
        Name = "Select Item",
        Options = itemNames,
        CurrentOption = selectedItem,
        MultiSelect = false,
        Flag = "ShopDropdown",
        Callback = function(Option)
            selectedItem = Option
        end,
    })

    -- Buy button
    ShopSection:CreateButton({
        Name = "Buy Selected Item",
        Callback = function()
            if not selectedItem or not itemMap[selectedItem] then
                Rayfield:Notify({
                    Title = "Error",
                    Content = "No item selected!",
                    Duration = 5,
                    Image = "x"
                })
                return
            end

            local itemId = itemMap[selectedItem]

            QuestEvent:FireServer({
                Item = itemId,
                Type = "StockBuy"
            })

            Rayfield:Notify({
                Title = "Purchase",
                Content = "Bought " .. stockTable[itemId].Name .. " for " .. stockTable[itemId].Price,
                Duration = 5,
                Image = "check"
            })
        end,
    })
end
