-- ShoppingModule.lua
-- Returns a function to create the Shopping tab
return function(Window, QuestEvent, stockTable, Rayfield)
    local ShopTab = Window:CreateTab("Shopping ðŸ›’", "shopping-bag")
    local ShopSection = ShopTab:CreateSection("Item Shop")

    local AvailableStock = game:GetService("ReplicatedStorage"):WaitForChild("AvailableStock")

    -- Prepare dropdown options for items that exist in AvailableStock
    local itemNames = {}
    local itemMap = {} -- displayName -> itemId

    for key, item in pairs(stockTable) do
        if AvailableStock:FindFirstChild(key) then
            local displayName = item.Name .. " - " .. item.Price
            table.insert(itemNames, displayName)
            itemMap[displayName] = key
        end
    end

    table.sort(itemNames, function(a,b)
        -- Sort according to MV number (MV1 â†’ MV15)
        local aNum = tonumber(itemMap[a]:match("%d+"))
        local bNum = tonumber(itemMap[b]:match("%d+"))
        return aNum < bNum
    end)

    local selectedItem = itemNames[1]

    -- Dropdown to select item
    local ItemDropdown = ShopSection:CreateDropdown({
        Name = "Select Item",
        Options = itemNames,
        CurrentOption = {selectedItem},
        MultipleOptions = false,
        Flag = "ShopDropdown",
        Callback = function(option)
            selectedItem = option[1]
        end
    })

    -- Buy button
    ShopSection:CreateButton({
        Name = "Buy Selected Item",
        Callback = function()
            if not selectedItem or not itemMap[selectedItem] then
                Rayfield:Notify({
                    Title = "Error",
                    Content = "No item selected or item unavailable!",
                    Duration = 5,
                    Image = "x"
                })
                return
            end

            local itemId = itemMap[selectedItem]

            QuestEvent:FireServer({
                Item = itemId,
                Type = "StockBuy"
            })

            Rayfield:Notify({
                Title = "Purchase",
                Content = "Bought " .. stockTable[itemId].Name .. " for " .. stockTable[itemId].Price,
                Duration = 5,
                Image = "check"
            })
        end
    })
end
