-- =======================
-- Farming Module (Normal + MultiQuest + SuperKill)
-- version: 1.0.1
-- =======================
return function(player, QuestEvent, quests, teleportZones, RunService, FarmTab)
    local selectedQuests = {}
    local multiQuestEnabled = false
    local autoFarmEnabled = false
    local superKillEnabled = false
    local heightOffset = 3 -- adjust to match player height above enemy HRP

    -- Helpers
    local function IsInQuest()
        local questFrame = player.PlayerGui:FindFirstChild("Quest") and player.PlayerGui.Quest:FindFirstChild("Mission")
        return questFrame and questFrame.Visible or false
    end

    local function TeleportToZone(level)
        for _, zone in ipairs(teleportZones) do
            if level >= zone.Min and level <= zone.Max then
                local hrp = player.Character:WaitForChild("HumanoidRootPart")
                hrp.CFrame = zone.CFrame
                break
            end
        end
    end

    local function FarmQuest(questData)
        if not questData then return end

        -- Teleport & start quest
        TeleportToZone(questData.MinLevel)
        task.wait(0.3)

        if not IsInQuest() then
            QuestEvent:FireServer({ Quest = questData.QuestName, Type = "RepeatQuest" })
        end

        repeat task.wait(0.1) until IsInQuest()

        -- Farm enemies
        local hrp = player.Character:WaitForChild("HumanoidRootPart")
        repeat
            local enemy = nil
            for _, mob in pairs(workspace.Mobs:GetChildren()) do
                local levelNum = tonumber(mob.Name:match("Lv(%d+)"))
                if levelNum == questData.MinLevel and mob:FindFirstChild("HumanoidRootPart") and mob:FindFirstChild("Humanoid") then
                    enemy = mob
                    break
                end
            end

            if enemy and enemy.Parent and enemy:FindFirstChild("HumanoidRootPart") then
                local enemyHRP = enemy.HumanoidRootPart

                -- Proper behind-enemy lock with height offset
                local behindPos = enemyHRP.Position - (enemyHRP.CFrame.LookVector * 5)
                behindPos = Vector3.new(behindPos.X, enemyHRP.Position.Y + heightOffset, behindPos.Z)
                hrp.CFrame = CFrame.new(behindPos, enemyHRP.Position + Vector3.new(0, heightOffset, 0))

                -- Attack
                game:GetService("ReplicatedStorage").Resource.Remotes.M1:FireServer({
                    type = "M1",
                    InAir = false,
                    UpTilt = false
                })

                -- SuperKill: Instantly reduce health to 0 if enabled
                if superKillEnabled and enemy:FindFirstChild("Humanoid") then
                    enemy.Humanoid.Health = 0
                end
            end

            task.wait(0.1)
        until not IsInQuest()
    end

    -- =======================
    -- Normal Autofarm Toggle
    -- =======================
    FarmTab:CreateToggle({
        Name = "AutoFarm (Highest Quest)",
        CurrentValue = false,
        Flag = "AutoFarmToggle",
        Callback = function(state)
            autoFarmEnabled = state

            if state then
                task.spawn(function()
                    QuestEvent:FireServer({ Type = "RemoveQuest" })
                    task.wait(0.2)

                    while autoFarmEnabled do
                        local level = player:WaitForChild("Data").Level.Value
                        local bestQuest = nil

                        for _, q in ipairs(quests) do
                            if level >= q.MinLevel then
                                bestQuest = q
                            end
                        end

                        if bestQuest then
                            FarmQuest(bestQuest)
                        else
                            task.wait(1)
                        end
                    end
                end)
            else
                QuestEvent:FireServer({ Type = "RemoveQuest" })
            end
        end
    })

    -- =======================
    -- Multi-Quest Farm
    -- =======================
    local questOptions = {}
    for _, q in ipairs(quests) do
        table.insert(questOptions, q.DisplayName)
    end

    FarmTab:CreateDropdown({
        Name = "Select Quests to Farm",
        Options = questOptions,
        CurrentOption = {},
        MultipleOptions = true,
        Flag = "MultiQuestDropdown",
        Callback = function(options)
            selectedQuests = options
        end
    })

    FarmTab:CreateToggle({
        Name = "Enable Multi-Quest Farm",
        CurrentValue = false,
        Flag = "MultiQuestToggle",
        Callback = function(state)
            multiQuestEnabled = state

            if state then
                task.spawn(function()
                    QuestEvent:FireServer({ Type = "RemoveQuest" })
                    task.wait(0.1)

                    while multiQuestEnabled do
                        if #selectedQuests == 0 then
                            task.wait(0.5) -- prevent crash if nothing selected
                        else
                            for _, questName in ipairs(selectedQuests) do
                                if not multiQuestEnabled then break end
                                local questData = nil
                                for _, q in ipairs(quests) do
                                    if q.DisplayName == questName then
                                        questData = q
                                        break
                                    end
                                end
                                if questData then
                                    FarmQuest(questData)
                                end
                            end
                        end
                    end
                end)
            else
                QuestEvent:FireServer({ Type = "RemoveQuest" })
            end
        end
    })

    -- =======================
    -- SuperKill Toggle
    -- =======================
    FarmTab:CreateToggle({
        Name = "SuperKill (Instakill Target)",
        CurrentValue = false,
        Flag = "SuperKillToggle",
        Callback = function(state)
            superKillEnabled = state
        end
    })
end
